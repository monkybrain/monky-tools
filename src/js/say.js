// Generated by CoffeeScript 1.10.0
(function() {
  var array2phrase, def, exec, flags, keys, object2phrase, queue, say, spawn, voice;

  spawn = require("child_process").spawn;

  def = {
    voice: 'daniel',
    keys: true
  };

  voice = def.keys;

  keys = def.keys;

  flags = {
    running: false
  };

  queue = [];

  object2phrase = function(object) {
    var key, output, value;
    output = [];
    for (key in object) {
      value = object[key];
      if (def.keys) {
        output.push(key + ": ");
      }
      output.push(value + ", ");
    }
    return output.join("");
  };

  array2phrase = function(phrase) {
    var i, item, len, output;
    output = [];
    for (i = 0, len = phrase.length; i < len; i++) {
      item = phrase[i];
      if (typeof item === 'object') {
        output.push(object2phrase(item));
      } else {
        output.push(item);
      }
    }
    return output.join(", ");
  };

  say = function(phrase, v, k) {
    voice = v != null ? v : void 0;
    keys = k != null ? k : void 0;
    if (typeof phrase === 'object') {
      if (phrase instanceof Array) {
        phrase = array2phrase(phrase);
      } else {
        phrase = object2phrase(phrase);
      }
    }
    queue.push({
      phrase: phrase,
      voice: voice
    });
    if (!flags.running) {
      return exec();
    }
  };

  exec = function() {
    var p, phrase;
    flags.running = true;
    if (queue.length > 0) {
      phrase = queue[0];
      queue = queue.slice(1);
      console.log(phrase.voice + ": " + phrase.phrase);
      p = spawn("say", ["-v", phrase.voice, phrase.phrase]);
      return p.on('close', function() {
        if (queue.length > 0) {
          return exec();
        } else {
          return flags.running = false;
        }
      });
    }
  };

  module.exports = say;

}).call(this);
